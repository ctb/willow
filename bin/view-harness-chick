#! /usr/bin/env python
import _mypath
import sys

PORT=8000

###

from willow.view import BasicView
from quixote.publish import Publisher
from quixote import get_wsgi_app
from wsgiref.simple_server import make_server

###

import pkg_resources
pkg_resources.require('pygr')

from pygr import seqdb, cnestedlist
from pygr_draw.annotation import SequenceWrapperFactory
from pygr_draw.annotation import FeatureWrapperFactory

class IntIDWrapperFactory(FeatureWrapperFactory):
    def __call__(self, feature):
        d = dict(self.values)
        d['name'] = str(feature.name)
        return self.klass(self, feature, d)
    
###

# load in the NLMSAs

#chick_genome = seqdb.SequenceFileDB('/scratch/titus/chick/chick.masked.fa')

refgene_filename = '/scratch/titus/chick/refGene.al'
refgenes = cnestedlist.NLMSA(refgene_filename)
wrapper_ref = IntIDWrapperFactory(color='red')

reads_filename = '/scratch/titus/chick/subram28/result14.al'
al2 = cnestedlist.NLMSA(reads_filename)
wrapper_read = SequenceWrapperFactory(name='')

chick_genome = al2.seqDict.prefixDict['chick']
refgenes.seqDict.prefixDict['chick'] = chick_genome
refgenes.seqDict.dicts[chick_genome] = 'chick'

nlmsa_list = [refgenes, al2]
wrapper_list = [wrapper_ref, wrapper_read]
extra_info = [ dict(name='RefSeq genes'), dict(name='DF1_Meq ChIP-seq') ]

###

from willow import db
if len(sys.argv) == 2:
    db.create(sys.argv[1])
else:
    db.create()

###

v = BasicView('chick', chick_genome, nlmsa_list, wrapper_list, extra_info)
p = Publisher(v, display_exceptions='plain')
p.is_thread_safe = True

httpd = make_server('', PORT, get_wsgi_app())
print 'serving on port %d' % (PORT,)

httpd.serve_forever()
